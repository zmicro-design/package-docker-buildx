#!/bin/bash

install() {
  # get system os/arch
  local arch="$PACKAGE_OS_ARCH"
  local kernel="$PACKAGE_OS_KERNEL"
  local platform="$PACKAGE_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$PACKAGE_USER_BIN_DIR"
  local tmp_dir="$PACKAGE_TMP_DIR"

  # prepare vars
  local name="buildx"
  # files
  local tmp_file="$name"
  local bin_file="$tmp_file"

  # prepare context
  cd $tmp_dir

  # reference: https://github.com/docker/buildx/releases
  # example:
  #   https://github.com/docker/buildx/releases/download/v0.9.1/buildx-v0.9.1.darwin-arm64
  #   https://github.com/docker/buildx/releases/download/v0.9.1/buildx-v0.9.1.darwin-amd64
  # generate url
  local url="https://github.com/docker/buildx/releases/download/$PACKAGE_CORE_VERSION/${name}-${PACKAGE_CORE_VERSION}.${platform}-${arch}"
  log::debug "[package][$name][$kernel][$arch] url: $url"

  # download
  os::download $tmp_file $url

  # make executable
  chmod +x $bin_file

  # install
  sudo mv $bin_file $usr_bin_dir/docker-buildx

  # clean
  rm -rf $tmp_dir

  if [ "$(os::is_macos)" = "true" ]; then
    log::info "[$(timestamp)] Docker Buildx is included in Docker Desktop for macOS."
    return
  fi

  # as docker plugin
  # https://github.com/docker/buildx
  mkdir -p ~/.docker/cli-plugins
  log::info "[$(timestamp)] creating docker plugin: docker-buildx ..."
  ln -sf $usr_bin_dir/docker-buildx ~/.docker/cli-plugins/docker-buildx
  if [ "$?" != "0" ]; then
    log::error "[$(timestamp)] failed to create docker plugin: docker-buildx."
    return 1
  fi

  # # if it in docker build env, do not create builder instance
  # if [ "$(os::is_docker_build_env)" = "true" ] || [ "$(os::is_docker)" = "true" ]; then
  #   return
  # fi

  # # create builder instance
  # local builder_name=buildx
  # has_builder() {
  #   docker buildx ls 2>>/dev/null | grep $1 >>/dev/null 2>&1
  #   if [ "$?" != "0" ]; then
  #     echo "false"
  #   else
  #     echo "true"
  #   fi
  # }

  # if [ "$(has_builder $builder_name)" != "true" ]; then
  #   log::info "[$(timestamp)] creating builder instance: $builder_name ..."
  #   # docker buildx create --use --bootstrap --name=$builder_name --platform=linux/amd64,linux/arm64 >>/dev/null
  #   docker buildx create --append --name=$builder_name --platform=linux/amd64,linux/arm64 >>/dev/null
  #   if [ "$?" != "0" ]; then
  #     log::error "[$(timestamp)] failed to create builder instance: $builder_name."
  #     return 1
  #   fi
  # fi
}

export -f install
